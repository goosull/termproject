{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst User = require('../models/User');\nconst Canvas = require('../models/Canvas');\n\n/*\n// Get all users\nrouter.get('/', async (req, res) => {\n  try {\n    const users = await User.find();\n    res.json(users);\n    console.log(users);\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n});\n*/\n\n// Create user\nrouter.post('/', async (req, res) => {\n  const user = new User(req.body);\n  //console.log(req);\n  try {\n    await user.save();\n    res.status(201).json(user);\n  } catch (err) {\n    res.status(400).json({\n      message: err.message\n    });\n  }\n});\n\n// Login request, return user info if success.\nrouter.post('/login', async (req, res) => {\n  try {\n    const user = await User.find({\n      name: req.body.name\n    });\n    if (user.length == 0) {\n      return res.status(400).json({\n        message: 'User not found'\n      });\n    }\n    if (req.body.passwd != user[0].passwd) {\n      return res.status(400).json({\n        message: 'Password incorrect'\n      });\n    }\n    res.status(201).json(user[0]);\n  } catch (err) {\n    res.status(400).json({\n      message: err.message\n    });\n  }\n});\n\n// Update user\nrouter.put('/:id', async (req, res) => {\n  const {\n    id\n  } = req.params;\n  try {\n    const user = await User.findByIdAndUpdate(id, req.body, {\n      new: true\n    });\n    if (!user) {\n      return res.status(404).json({\n        message: 'User not found'\n      });\n    }\n    res.json(user);\n  } catch (err) {\n    res.status(400).json({\n      message: err.message\n    });\n  }\n});\n\n// Delete user (with canvas)\nrouter.delete('/:id', async (req, res) => {\n  const {\n    id\n  } = req.params;\n  try {\n    const user = await User.findByIdAndDelete(id);\n    //const user = await User.findById(id);\n    if (!user) {\n      console.log(id);\n      return res.status(404).json({\n        message: 'User not found'\n      });\n    }\n    let user_name = user.name;\n    const canvas_list = await Canvas.find({\n      user: user_name\n    });\n    for await (const canvas of canvas_list) {\n      if (canvas.user.length == 1) {\n        await Canvas.findByIdAndDelete(canvas.id);\n      } else {\n        await Canvas.findByIdAndUpdate(canvas.id, {\n          user: canvas.user.filter(e => e != user_name)\n        });\n      }\n    }\n    res.status(201).json({});\n  } catch (err) {\n    res.status(400).json({\n      message: err.message\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","User","Canvas","post","req","res","user","body","save","status","json","err","message","find","name","length","passwd","put","id","params","findByIdAndUpdate","new","delete","findByIdAndDelete","console","log","user_name","canvas_list","canvas","filter","e","module","exports"],"sources":["/Users/ideachoi/Documents/univ/3_1/webos/term_final/termproject/backend/routes/userRoutes.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst User = require('../models/User');\nconst Canvas = require('../models/Canvas');\n\n\n/*\n// Get all users\nrouter.get('/', async (req, res) => {\n  try {\n    const users = await User.find();\n    res.json(users);\n    console.log(users);\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n});\n*/\n\n// Create user\nrouter.post('/', async (req, res) => {\n  const user = new User(req.body);\n  //console.log(req);\n  try {\n    await user.save();\n    res.status(201).json(user);\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n});\n\n// Login request, return user info if success.\nrouter.post('/login', async (req, res)=>{\n  try{\n    const user = await User.find({name: req.body.name});\n    if (user.length == 0) {\n      return res.status(400).json({ message: 'User not found'});\n    }\n    if (req.body.passwd != user[0].passwd) {\n      return res.status(400).json({ message: 'Password incorrect'});\n    } \n    res.status(201).json(user[0]);\n\n  } catch(err) {\n    res.status(400).json({ message: err.message});\n  }\n});\n\n// Update user\nrouter.put('/:id', async (req, res) => {\n  const { id } = req.params;\n  try {\n    const user = await User.findByIdAndUpdate(id, req.body, { new: true });\n    if (!user) {\n      return res.status(404).json({ message: 'User not found' });\n    }\n    res.json(user);\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n});\n\n// Delete user (with canvas)\nrouter.delete('/:id', async (req, res) => {\n  const { id } = req.params;\n  try {\n    const user = await User.findByIdAndDelete(id);\n    //const user = await User.findById(id);\n    if (!user) {\n      console.log(id);\n      return res.status(404).json({ message: 'User not found' });\n    }\n\n    let user_name = user.name;\n    const canvas_list = await Canvas.find({user: user_name});\n    for await (const canvas of canvas_list) {\n        if (canvas.user.length == 1) {\n          await Canvas.findByIdAndDelete(canvas.id)\n        } else { \n          await Canvas.findByIdAndUpdate(canvas.id, {user: canvas.user.filter((e)=>e!=user_name)})\n        }\n    }\n\n    res.status(201).json({});\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n});\n\nmodule.exports = router;"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,IAAI,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AACtC,MAAMI,MAAM,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;;AAG1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAC,MAAM,CAACI,IAAI,CAAC,GAAG,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACnC,MAAMC,IAAI,GAAG,IAAIL,IAAI,CAACG,GAAG,CAACG,IAAI,CAAC;EAC/B;EACA,IAAI;IACF,MAAMD,IAAI,CAACE,IAAI,CAAC,CAAC;IACjBH,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACJ,IAAI,CAAC;EAC5B,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZN,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,OAAO,EAAED,GAAG,CAACC;IAAQ,CAAC,CAAC;EAChD;AACF,CAAC,CAAC;;AAEF;AACAb,MAAM,CAACI,IAAI,CAAC,QAAQ,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAG;EACtC,IAAG;IACD,MAAMC,IAAI,GAAG,MAAML,IAAI,CAACY,IAAI,CAAC;MAACC,IAAI,EAAEV,GAAG,CAACG,IAAI,CAACO;IAAI,CAAC,CAAC;IACnD,IAAIR,IAAI,CAACS,MAAM,IAAI,CAAC,EAAE;MACpB,OAAOV,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEE,OAAO,EAAE;MAAgB,CAAC,CAAC;IAC3D;IACA,IAAIR,GAAG,CAACG,IAAI,CAACS,MAAM,IAAIV,IAAI,CAAC,CAAC,CAAC,CAACU,MAAM,EAAE;MACrC,OAAOX,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEE,OAAO,EAAE;MAAoB,CAAC,CAAC;IAC/D;IACAP,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;EAE/B,CAAC,CAAC,OAAMK,GAAG,EAAE;IACXN,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,OAAO,EAAED,GAAG,CAACC;IAAO,CAAC,CAAC;EAC/C;AACF,CAAC,CAAC;;AAEF;AACAb,MAAM,CAACkB,GAAG,CAAC,MAAM,EAAE,OAAOb,GAAG,EAAEC,GAAG,KAAK;EACrC,MAAM;IAAEa;EAAG,CAAC,GAAGd,GAAG,CAACe,MAAM;EACzB,IAAI;IACF,MAAMb,IAAI,GAAG,MAAML,IAAI,CAACmB,iBAAiB,CAACF,EAAE,EAAEd,GAAG,CAACG,IAAI,EAAE;MAAEc,GAAG,EAAE;IAAK,CAAC,CAAC;IACtE,IAAI,CAACf,IAAI,EAAE;MACT,OAAOD,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEE,OAAO,EAAE;MAAiB,CAAC,CAAC;IAC5D;IACAP,GAAG,CAACK,IAAI,CAACJ,IAAI,CAAC;EAChB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZN,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,OAAO,EAAED,GAAG,CAACC;IAAQ,CAAC,CAAC;EAChD;AACF,CAAC,CAAC;;AAEF;AACAb,MAAM,CAACuB,MAAM,CAAC,MAAM,EAAE,OAAOlB,GAAG,EAAEC,GAAG,KAAK;EACxC,MAAM;IAAEa;EAAG,CAAC,GAAGd,GAAG,CAACe,MAAM;EACzB,IAAI;IACF,MAAMb,IAAI,GAAG,MAAML,IAAI,CAACsB,iBAAiB,CAACL,EAAE,CAAC;IAC7C;IACA,IAAI,CAACZ,IAAI,EAAE;MACTkB,OAAO,CAACC,GAAG,CAACP,EAAE,CAAC;MACf,OAAOb,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEE,OAAO,EAAE;MAAiB,CAAC,CAAC;IAC5D;IAEA,IAAIc,SAAS,GAAGpB,IAAI,CAACQ,IAAI;IACzB,MAAMa,WAAW,GAAG,MAAMzB,MAAM,CAACW,IAAI,CAAC;MAACP,IAAI,EAAEoB;IAAS,CAAC,CAAC;IACxD,WAAW,MAAME,MAAM,IAAID,WAAW,EAAE;MACpC,IAAIC,MAAM,CAACtB,IAAI,CAACS,MAAM,IAAI,CAAC,EAAE;QAC3B,MAAMb,MAAM,CAACqB,iBAAiB,CAACK,MAAM,CAACV,EAAE,CAAC;MAC3C,CAAC,MAAM;QACL,MAAMhB,MAAM,CAACkB,iBAAiB,CAACQ,MAAM,CAACV,EAAE,EAAE;UAACZ,IAAI,EAAEsB,MAAM,CAACtB,IAAI,CAACuB,MAAM,CAAEC,CAAC,IAAGA,CAAC,IAAEJ,SAAS;QAAC,CAAC,CAAC;MAC1F;IACJ;IAEArB,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZN,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,OAAO,EAAED,GAAG,CAACC;IAAQ,CAAC,CAAC;EAChD;AACF,CAAC,CAAC;AAEFmB,MAAM,CAACC,OAAO,GAAGjC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}